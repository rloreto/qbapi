import { Weddings } from '.'
import { User } from '../user'

let user, weddings

beforeEach(async () => {
  user = await User.create({ email: 'a@a.com', password: '123456' })
  weddings = await Weddings.create({ user, name: 'test', place: 'test', email: 'test', mobile: 'test', date: 'test', remainingDays: 'test', sentDossierDate: 'test', confirm: 'test', deposit: 'test', total: 'test', active: 'test', brideHomeFilm: 'test', groomHomeFilm: 'test', brideDressedUpTime: 'test', brideName: 'test', brideId: 'test', brideMobile: 'test', brideDressedUpPlace: 'test', brideDressedUpNotes: 'test', groomDressedUpTime: 'test', groomName: 'test', groomId: 'test', groomMobile: 'test', groomDressedUpPlace: 'test', groomDressedUpNotes: 'test', ceremonyTime: 'test', ceremonyPlace: 'test', ceremonyNotes: 'test', celebrationTime: 'test', celebrationPlace: 'test', celebrationNotes: 'test', additionalInfo: 'test' })
})

describe('view', () => {
  it('returns simple view', () => {
    const view = weddings.view()
    expect(typeof view).toBe('object')
    expect(view.id).toBe(weddings.id)
    expect(typeof view.user).toBe('object')
    expect(view.user.id).toBe(user.id)
    expect(view.name).toBe(weddings.name)
    expect(view.place).toBe(weddings.place)
    expect(view.email).toBe(weddings.email)
    expect(view.mobile).toBe(weddings.mobile)
    expect(view.date).toBe(weddings.date)
    expect(view.remainingDays).toBe(weddings.remainingDays)
    expect(view.sentDossierDate).toBe(weddings.sentDossierDate)
    expect(view.confirm).toBe(weddings.confirm)
    expect(view.deposit).toBe(weddings.deposit)
    expect(view.total).toBe(weddings.total)
    expect(view.active).toBe(weddings.active)
    expect(view.brideHomeFilm).toBe(weddings.brideHomeFilm)
    expect(view.groomHomeFilm).toBe(weddings.groomHomeFilm)
    expect(view.brideDressedUpTime).toBe(weddings.brideDressedUpTime)
    expect(view.brideName).toBe(weddings.brideName)
    expect(view.brideId).toBe(weddings.brideId)
    expect(view.brideMobile).toBe(weddings.brideMobile)
    expect(view.brideDressedUpPlace).toBe(weddings.brideDressedUpPlace)
    expect(view.brideDressedUpNotes).toBe(weddings.brideDressedUpNotes)
    expect(view.groomDressedUpTime).toBe(weddings.groomDressedUpTime)
    expect(view.groomName).toBe(weddings.groomName)
    expect(view.groomId).toBe(weddings.groomId)
    expect(view.groomMobile).toBe(weddings.groomMobile)
    expect(view.groomDressedUpPlace).toBe(weddings.groomDressedUpPlace)
    expect(view.groomDressedUpNotes).toBe(weddings.groomDressedUpNotes)
    expect(view.ceremonyTime).toBe(weddings.ceremonyTime)
    expect(view.ceremonyPlace).toBe(weddings.ceremonyPlace)
    expect(view.ceremonyNotes).toBe(weddings.ceremonyNotes)
    expect(view.celebrationTime).toBe(weddings.celebrationTime)
    expect(view.celebrationPlace).toBe(weddings.celebrationPlace)
    expect(view.celebrationNotes).toBe(weddings.celebrationNotes)
    expect(view.additionalInfo).toBe(weddings.additionalInfo)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })

  it('returns full view', () => {
    const view = weddings.view(true)
    expect(typeof view).toBe('object')
    expect(view.id).toBe(weddings.id)
    expect(typeof view.user).toBe('object')
    expect(view.user.id).toBe(user.id)
    expect(view.name).toBe(weddings.name)
    expect(view.place).toBe(weddings.place)
    expect(view.email).toBe(weddings.email)
    expect(view.mobile).toBe(weddings.mobile)
    expect(view.date).toBe(weddings.date)
    expect(view.remainingDays).toBe(weddings.remainingDays)
    expect(view.sentDossierDate).toBe(weddings.sentDossierDate)
    expect(view.confirm).toBe(weddings.confirm)
    expect(view.deposit).toBe(weddings.deposit)
    expect(view.total).toBe(weddings.total)
    expect(view.active).toBe(weddings.active)
    expect(view.brideHomeFilm).toBe(weddings.brideHomeFilm)
    expect(view.groomHomeFilm).toBe(weddings.groomHomeFilm)
    expect(view.brideDressedUpTime).toBe(weddings.brideDressedUpTime)
    expect(view.brideName).toBe(weddings.brideName)
    expect(view.brideId).toBe(weddings.brideId)
    expect(view.brideMobile).toBe(weddings.brideMobile)
    expect(view.brideDressedUpPlace).toBe(weddings.brideDressedUpPlace)
    expect(view.brideDressedUpNotes).toBe(weddings.brideDressedUpNotes)
    expect(view.groomDressedUpTime).toBe(weddings.groomDressedUpTime)
    expect(view.groomName).toBe(weddings.groomName)
    expect(view.groomId).toBe(weddings.groomId)
    expect(view.groomMobile).toBe(weddings.groomMobile)
    expect(view.groomDressedUpPlace).toBe(weddings.groomDressedUpPlace)
    expect(view.groomDressedUpNotes).toBe(weddings.groomDressedUpNotes)
    expect(view.ceremonyTime).toBe(weddings.ceremonyTime)
    expect(view.ceremonyPlace).toBe(weddings.ceremonyPlace)
    expect(view.ceremonyNotes).toBe(weddings.ceremonyNotes)
    expect(view.celebrationTime).toBe(weddings.celebrationTime)
    expect(view.celebrationPlace).toBe(weddings.celebrationPlace)
    expect(view.celebrationNotes).toBe(weddings.celebrationNotes)
    expect(view.additionalInfo).toBe(weddings.additionalInfo)
    expect(view.createdAt).toBeTruthy()
    expect(view.updatedAt).toBeTruthy()
  })
})
